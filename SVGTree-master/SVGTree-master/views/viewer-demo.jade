extends ./demo-common.jade

block init
  - pageTitle = "Viewer Demo | SVGTree";

mixin sec(name, id, title)
  hr
  section
    hgroup
      h2(id= id)= name
    div(id="test-" + id, title=title)&attributes(attributes)
    block

block content
  section
    hgroup
      h2 SVGTree Viewer Demo
    p.
      The examples on this page showcase the basic functionality of the trees made with SVGTree Viewer plug-in.

    p Contents:
    ul.demo-contents
      li <a href="#basic">Basic functionality</a>
      li <a href="#buttons">Customizable actions</a>
      li <a href="#size">Widget size</a>
      li <a href="#locate">Locate button</a>

  +sec("Basic Functionality", "basic", "Sample Tree")
    +code("basic").
      var container = document.getElementById('test-basic');
      new SVGTreeViewer('((A,B),(C,D)F)E;', container, {
          'interaction': ['collapse', 'add', 'remove', 'edit', 'drag']
      });

  +sec("Customizable Actions", "buttons", "No Undo & Newick Buttons")
    p.
      You can disable undo, settings and / or Newick notation buttons by specifying appropriate boolean options 
      (<code>undo</code>, <code>settings</code>, <code>newick</code>).
    +code("buttons").
      var container = document.getElementById('test-buttons');
      new SVGTreeViewer('((A,B),(C,D)F)E;', container, {
          'interaction': ['collapse', 'add', 'remove', 'edit', 'drag'],
          'newick': false,
          'undo': false
      });

  +sec("Widget Size", "size", "Small Size")(style={ width: "300px", height: "300px" })
    p.
      You can specify the size of a widget using width and / or height styles (e.g., using <code>&lt;div ... style="width: 500px; height: 500px;"&gt;</code>).
      Note that for the optimal layout, the width and the height of the widget should be no less than <code>300px</code>.
    +code("size").
      var container = document.getElementById('test-size');
      new SVGTreeViewer('((A,B),(C,D)F)E;', container, {
          'interaction': false
      });
	  
  +sec("Locate Button", "locate", "Locate")(style={ height: "600px" })
    p.
      For large trees, there is a useful Locate button which centers the displayed area of the tree on the selected node.
    p
      button#test-locate-gen(type="button") Generate a tree
    +code("locate").
      var container = document.querySelector('#test-locate'),
          nodes = 300, // Number of nodes in the tree
          maxChildren = 4, // Maximum number of children of each node
          notation = randomTree(nodes, maxChildren).newick();
      var viewer = new SVGTreeViewer(notation, container, {
          'interaction': ['collapse', 'add', 'remove', 'edit', 'drag'],
          'labelBackgrounds': false
      });
      document.querySelector('#test-locate-gen').onclick = function() {
         viewer.tree.setContent(randomTree(nodes, maxChildren).newick());
      };